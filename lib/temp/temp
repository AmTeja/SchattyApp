Scaffold(
      backgroundColor: Colors.black,
      body: Container(
        decoration: BoxDecoration(
            gradient: LinearGradient(
          colors: [
            Color.fromARGB(255, 0, 0, 0),
            Color.fromARGB(100, 39, 38, 38)
              ],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
//              tileMode: TileMode.mirror,
            )
        ),
        child: Center(
          child: Container(
            color: Colors.transparent,
            child: Container(
              width: MediaQuery.of(context).size.width,
              height: 650,
              decoration: BoxDecoration(
                boxShadow: [
                  new BoxShadow(
//                      color: Colors.red,
                    color: Color.fromARGB(217, 0, 0, 0),
                    offset: new Offset(2, 3),
                    blurRadius: 5,
                    spreadRadius: 6,
                  )
                ],
                borderRadius: BorderRadius.circular(46),
                gradient: LinearGradient(
                  colors: [
                    Color.fromARGB(255, 14, 14, 14),
                    Color.fromARGB(100, 46, 45, 45)
                  ],
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                ),
              ),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Flexible(
                    child: Container(
                      padding: EdgeInsets.only(bottom: 100, top: 80),
                      alignment: Alignment.topCenter,
                      child: Text(
                        "Schatty",
                        textAlign: TextAlign.left,
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 70,
                          fontFamily: 'North Regular',
                        ),
                      ),
                    ),
                  ),
                  signInButton(),
                  SizedBox(
                    height: 20,
                  ),
                  signUpButton(),
                  SizedBox(
                    height: 20,
                  ),
                  googleButton(),
                  SizedBox(height: 180,)
                ],
              ),
            ),
          ),
        ),
      ),
    );













    authMethods.signInWithGoogle().then((val) async {
          if (val != null) {
            String username = authMethods.googleSignIn.currentUser.displayName
                .replaceAll(" ", "");
            String email = authMethods.googleSignIn.currentUser.email;
            String profilePicURL =
                "https://www.searchpng.com/wp-content/uploads/2019/02/Deafult-Profile-Pitcher.png";
            FirebaseUser user = await FirebaseAuth.instance.currentUser();
            String uid = user.uid;
            Preferences.saveUserNameSharedPreference(username.replaceAll(" ", ""));
            Preferences.saveUserLoggedInSharedPreference(true);
            print(username.replaceAll(" ", ""));
            Preferences.saveIsGoogleUser(true);
            Map<String, String> userInfoMap = {
              //Making MAP for firebase
              "username": username,
              "email": email,
              "searchKey": username.substring(0, 1).toUpperCase(),
              "photoUrl": profilePicURL,
              "uid": uid
            };
            databaseMethods.uploadUserInfo(userInfoMap, uid);
            Navigator.pushReplacement(
                context, MaterialPageRoute(builder: (context) => ChatRoom()));
          } else {
            String username = authMethods.googleSignIn.currentUser.displayName
                .replaceAll(" ", "");
            Preferences.saveUserNameSharedPreference(username);
            Preferences.saveUserLoggedInSharedPreference(true);
            Preferences.saveIsGoogleUser(true);
            Navigator.pushReplacement(
                context, MaterialPageRoute(builder: (context) => ChatRoom()));
          }
        });



        SelectedTag<Scifi> {

            refForScifi = Firebase.instance.collection('Posts').document("Scifi").collection('public');

            Stream = refForScifi.snapshots();
        }





        Row(
                      mainAxisAlignment: MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.center,
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Container(
                            padding: EdgeInsets.only(top: 20,left: 20,right: 10),
                            child: Text("Discover",
                            style: TextStyle(
                              fontSize: 38,
                              fontWeight: FontWeight.bold,
                              fontFamily: "Segoe UI",
                            ),)
                        ),
                        Flexible(
                          flex:  3,
                          child: Container(
                            alignment: Alignment.center,
                            width: 220,
                            height: 40,
                            child: TextField(
                              textCapitalization: TextCapitalization.sentences,
                              decoration: InputDecoration(
                                suffixIcon: IconButton(
                                  icon: Icon(Icons.search),
                                  onPressed: (){

                                  },
                                )
                              ),
                            ),
                          ),
                        ),
                        Flexible(
                          flex: 1,
                          child: Container(
                            child: Padding(
                              padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),
                              child: CircleAvatar(
                                radius: 23,
                                child: ClipOval(
                                  child: url != null
                                      ? CachedNetworkImage(
                                    width: 60,
                                    height: 60,
                                    imageUrl: url,
                                    fit: BoxFit.cover,
                                  )
                                      : Image.asset(
                                    "assets/images/username.png",
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                          ),
                        )
                      ],
                    ),
                    Container(
                      margin: EdgeInsets.symmetric(vertical: 20),
                      height: 40,
                      child: ListView(
                        scrollDirection: Axis.horizontal,
                        children: [
                          showTag("Sci-Fi"),
                          showTag("Tech"),
                          showTag("Art"),
                          showTag("Animals"),
                          showTag("History"),
                        ],
                      ),
                    ),


StreamBuilder(
            stream: postStream,
            builder: (context, snapshot)
                {
                  return snapshot.hasData ? SmartRefresher(
                    enablePullDown: true,
                    enablePullUp: false,
                    header: BezierCircleHeader(),
                    controller: _refreshController,
                    onRefresh: _onRefresh,
                    onLoading: _onLoading,
                    child: ListView.builder(
                        itemCount: snapshot.data.documents.length,
                        itemBuilder:(context, index){
                          return BuildPost(
                            isDark: isDark,
                            url: snapshot.data.documents[index].data["url"],
                            username: snapshot.data.documents[index].data["username"],
                            topic: selectedTag,
                          );
                        },
                    ),
                  ) : Container(
                    child: Center(
                      child: Text("No Data"),
                    ),
                  );
                }
          )

          Container(
                    padding: EdgeInsets.all(16),
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        Container(
                          alignment: Alignment.center,
                          padding: EdgeInsets.symmetric(vertical: 16,horizontal: 8),
                          child: Row(
                            children: [
                              UserAvatar(profileURL, 70),
                              Padding(
                                padding: const EdgeInsets.symmetric(horizontal: 32),
                                child: Text(userName,
                                  style: TextStyle(
                                      fontSize: 30
                                  ),),
                              ),
                            ],
                          ),
                        )
                      ],
                    ),
                  ),









